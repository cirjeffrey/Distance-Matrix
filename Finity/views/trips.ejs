<body>
  <h1>TRIPS</h1>
  <script>
    var origin, destination;
    function initAutocomplete() {
      // Create the search box and link it to the UI element.
      var input = document.getElementById("origin");
      var searchBox = new google.maps.places.SearchBox(input);
      var dest = document.getElementById("destination");
      var destBox = new google.maps.places.SearchBox(dest);
      searchBox.addListener("places_changed", function () {
        var places = searchBox.getPlaces();
        origin = places[0].formatted_address;

        if (origin.length == 0) {
          return;
        }
      });

      destBox.addListener("places_changed", function () {
        var places2 = destBox.getPlaces();
        destination = places2[0].formatted_address;

        console.log(places2[0].formatted_address);
        if (destination.length == 0) {
          return;
        }
      });
    }

    function calcDistance(start, end) {
      var service = new google.maps.DistanceMatrixService();
      service.getDistanceMatrix(
        {
          origins: [start],
          destinations: [end],
          travelMode: "DRIVING",
          unitSystem: google.maps.UnitSystem.METRIC,
          avoidHighways: false,
          avoidTolls: false,
        },
        function (response, status) {
          if (status !== "OK") {
            alert("Error was: " + status);
          } else {
            var originList = response.originAddresses;
            var destinationList = response.destinationAddresses;

            var showGeocodedAddressOnMap = function (asDestination) {
              var icon = asDestination ? destinationIcon : originIcon;
              return function (results, status) {
                if (status === "OK") {
                  map.fitBounds(bounds.extend(results[0].geometry.location));
                  markersArray.push(
                    new google.maps.Marker({
                      map: map,
                      position: results[0].geometry.location,
                      icon: icon,
                    })
                  );
                } else {
                  alert("Geocode was not successful due to: " + status);
                }
              };
            };

            console.log(
              "DISTANCE: " + response.rows[0].elements[0].distance.text
            );
          }
        }
      );
    }
  </script>

  <script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBDBogpc-GSdpfdovoS9QCoqKg69OVFjgE&libraries=places&callback=initAutocomplete"
    async
    defer
  ></script>
</body>
